##
# create-react-app environment variables
##

# By default, Create React App will open the default system browser, favoring Chrome on
# macOS. Specify a browser to override this behavior, or set it to none to disable it completely. If
# you need to customize the way the browser is launched, you can specify a node script instead. Any
# arguments passed to npm start will also be passed to this script, and the url where your app is
# served will be the last argument. Your script's file name must have the .js extension. (Dev Only)
# BROWSER

# When the BROWSER environment variable is specified, any arguments that you set to this environment
# variable will be passed to the browser instance. Multiple arguments are supported as a space
# separated list. By default, no arguments are passed through to browsers. (Dev Only) BROWSER_ARGS

# By default, the development web server binds to all hostnames on the device (localhost, LAN
# network address, etc.). You may use this variable to specify a different host. (Dev Only)
#HOST

# By default, the development web server will attempt to listen on port 3000 or prompt you to
# attempt the next available port. You may use this variable to specify a different port. (Dev Only)
#PORT

# When set to true, Create React App will run the development server in https mode. (Dev Only)
#HTTPS

# When set, Create React App will run the development server with a custom websocket hostname for
# hot module reloading. Normally, webpack-dev-server defaults to window.location.hostname for the
# SockJS hostname. You may use this variable to start local development on more than one Create
# React App project at a time. See webpack-dev-server documentation for more details. (Dev Only)
#WDS_SOCKET_HOST

# When set, Create React App will run the development server with a custom websocket path for hot
# module reloading. Normally, webpack-dev-server defaults to /sockjs-node for the SockJS
# pathname. You may use this variable to start local development on more than one Create React App
# project at a time. See webpack-dev-server documentation for more details. (Dev Only)
#WDS_SOCKET_PATH

# When set, Create React App will run the development server with a custom websocket port for hot
# module reloading. Normally, webpack-dev-server defaults to window.location.port for the SockJS
# port. You may use this variable to start local development on more than one Create React App
# project at a time. See webpack-dev-server documentation for more details. (Dev Only)
#WDS_SOCKET_PORT

# Create React App assumes your application is hosted at the serving web server's root or a subpath
# as specified in package.json (homepage). Normally, Create React App ignores the hostname. You may
# use this variable to force assets to be referenced verbatim to the url you provide (hostname
# included). This may be particularly useful when using a CDN to host your application.
#PUBLIC_URL

# By default, Create React App will output compiled assets to a /build directory adjacent to your
# /src. You may use this variable to specify a new path for Create React App to output
# assets. BUILD_PATH should be specified as a path relative to the root of your project. (Production
# only)
#BUILD_PATH

# When set to true, Create React App treats warnings as failures in the build. It also makes the
# test runner non-watching. Most CIs set this flag by default.
#CI

# When an app crashes in development, you will see an error overlay with clickable stack trace. When
# you click on it, Create React App will try to determine the editor you are using based on
# currently running processes, and open the relevant source file. You can send a pull request to
# detect your editor of choice. Setting this environment variable overrides the automatic
# detection. If you do it, make sure your systems PATH environment variable points to your editorâ€™s
# bin folder. You can also set it to none to disable it completely. (Dev Only)
#REACT_EDITOR

# When set to true, the watcher runs in polling mode, as necessary inside a VM. Use this option if
# npm start isn't detecting changes. (Dev Only)
#CHOKIDAR_USEPOLLING

# When set to false, source maps are not generated for a production build. This solves out of memory
# (OOM) issues on some smaller machines. (Production only)
#GENERATE_SOURCEMAP

# By default, Create React App will embed the runtime script into index.html during the production
# build. When set to false, the script will not be embedded and will be imported as usual. This is
# normally required when dealing with CSP. (Production only)
#INLINE_RUNTIME_CHUNK

# By default, images smaller than 10,000 bytes are encoded as a data URI in base64 and inlined in
# the CSS or JS build artifact. Set this to control the size limit in bytes. Setting it to 0 will
# disable the inlining of images. (Production only)
#IMAGE_INLINE_SIZE_LIMIT

# When set to false, disables experimental support for Fast Refresh to allow you to tweak your
# components in real time without reloading the page. (Dev Only)
#FAST_REFRESH

# When set to true, you can run and properly build TypeScript projects even if there are TypeScript
# type check errors. These errors are printed as warnings in the terminal and/or browser console.
#TSC_COMPILE_ON_ERROR

# When set to true, ESLint errors are converted to warnings during development. As a result, ESLint
# output will no longer appear in the error overlay. (Dev Only)
#ESLINT_NO_DEV_ERRORS

# When set to true, eslint-webpack-plugin will be completely disabled.
#DISABLE_ESLINT_PLUGIN

# When set to true, disables the new JSX transform introduced in React 17 and backported to React
# 16.14.0, 15.7.0, and 0.14.10. New projects will use a version of React that supports this by
# default but you may need to disable it in existing projects if you can't upgrade React.
#DISABLE_NEW_JSX_TRANSFORM
